//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/reflect/Types.java
//

#include "../../../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonReflectTypes")
#ifdef RESTRICT_ComGoogleCommonReflectTypes
#define INCLUDE_ALL_ComGoogleCommonReflectTypes 0
#else
#define INCLUDE_ALL_ComGoogleCommonReflectTypes 1
#endif
#undef RESTRICT_ComGoogleCommonReflectTypes

#if !defined (ComGoogleCommonReflectTypes_) && (INCLUDE_ALL_ComGoogleCommonReflectTypes || defined(INCLUDE_ComGoogleCommonReflectTypes))
#define ComGoogleCommonReflectTypes_

@class IOSClass;
@class IOSObjectArray;
@protocol JavaLangReflectGenericDeclaration;
@protocol JavaLangReflectParameterizedType;
@protocol JavaLangReflectType;
@protocol JavaLangReflectTypeVariable;
@protocol JavaLangReflectWildcardType;

@interface ComGoogleCommonReflectTypes : NSObject

#pragma mark Package-Private

+ (IOSClass *)getArrayClassWithIOSClass:(IOSClass *)componentType;

+ (id<JavaLangReflectType>)getComponentTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectTypeVariable>)newArtificialTypeVariableWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)declaration
                                                                                     withNSString:(NSString *)name
                                                                     withJavaLangReflectTypeArray:(IOSObjectArray *)bounds OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithIOSClass:(IOSClass *)rawType
                                            withJavaLangReflectTypeArray:(IOSObjectArray *)arguments OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithOwnerWithJavaLangReflectType:(id<JavaLangReflectType>)ownerType
                                                                                withIOSClass:(IOSClass *)rawType
                                                                withJavaLangReflectTypeArray:(IOSObjectArray *)arguments OBJC_METHOD_FAMILY_NONE;

+ (id<JavaLangReflectWildcardType>)subtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)upperBound;

+ (id<JavaLangReflectWildcardType>)supertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)lowerBound;

+ (NSString *)toStringWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes)

FOUNDATION_EXPORT id<JavaLangReflectType> ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(id<JavaLangReflectType> componentType);

FOUNDATION_EXPORT id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithOwnerWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *arguments);

FOUNDATION_EXPORT id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(IOSClass *rawType, IOSObjectArray *arguments);

FOUNDATION_EXPORT id<JavaLangReflectTypeVariable> ComGoogleCommonReflectTypes_newArtificialTypeVariableWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> declaration, NSString *name, IOSObjectArray *bounds);

FOUNDATION_EXPORT id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(id<JavaLangReflectType> upperBound);

FOUNDATION_EXPORT id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_supertypeOfWithJavaLangReflectType_(id<JavaLangReflectType> lowerBound);

FOUNDATION_EXPORT NSString *ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT id<JavaLangReflectType> ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT IOSClass *ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_(IOSClass *componentType);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes)

#endif

#if !defined (ComGoogleCommonReflectTypes_WildcardTypeImpl_) && (INCLUDE_ALL_ComGoogleCommonReflectTypes || defined(INCLUDE_ComGoogleCommonReflectTypes_WildcardTypeImpl))
#define ComGoogleCommonReflectTypes_WildcardTypeImpl_

#define RESTRICT_JavaLangReflectWildcardType 1
#define INCLUDE_JavaLangReflectWildcardType 1
#include "../../../../../java/lang/reflect/WildcardType.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "../../../../../java/io/Serializable.h"

@class IOSObjectArray;

@interface ComGoogleCommonReflectTypes_WildcardTypeImpl : NSObject < JavaLangReflectWildcardType, JavaIoSerializable >

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getLowerBounds;

- (IOSObjectArray *)getUpperBounds;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectTypeArray:(IOSObjectArray *)lowerBounds
                    withJavaLangReflectTypeArray:(IOSObjectArray *)upperBounds;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_WildcardTypeImpl)

FOUNDATION_EXPORT void ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_WildcardTypeImpl *self, IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_WildcardTypeImpl *new_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_WildcardTypeImpl *create_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_WildcardTypeImpl)

#endif

#if !defined (ComGoogleCommonReflectTypes_JavaVersion_) && (INCLUDE_ALL_ComGoogleCommonReflectTypes || defined(INCLUDE_ComGoogleCommonReflectTypes_JavaVersion))
#define ComGoogleCommonReflectTypes_JavaVersion_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "../../../../../java/lang/Enum.h"

@class ComGoogleCommonCollectImmutableList;
@class IOSObjectArray;
@protocol JavaLangReflectType;

typedef NS_ENUM(NSUInteger, ComGoogleCommonReflectTypes_JavaVersion_Enum) {
  ComGoogleCommonReflectTypes_JavaVersion_Enum_JAVA6 = 0,
  ComGoogleCommonReflectTypes_JavaVersion_Enum_JAVA7 = 1,
  ComGoogleCommonReflectTypes_JavaVersion_Enum_JAVA8 = 2,
};

@interface ComGoogleCommonReflectTypes_JavaVersion : JavaLangEnum < NSCopying >

#pragma mark Public

+ (ComGoogleCommonReflectTypes_JavaVersion *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

- (NSString *)typeNameWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (ComGoogleCommonCollectImmutableList *)usedInGenericTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)types;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersion)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_values_[];

inline ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_get_JAVA6();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypes_JavaVersion, JAVA6)

inline ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_get_JAVA7();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypes_JavaVersion, JAVA7)

inline ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_get_JAVA8();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypes_JavaVersion, JAVA8)

inline ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_get_CURRENT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_CURRENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypes_JavaVersion, CURRENT, ComGoogleCommonReflectTypes_JavaVersion *)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonReflectTypes_JavaVersion_values();

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_JavaVersion)

#endif

#if !defined (ComGoogleCommonReflectTypes_NativeTypeVariableEquals_) && (INCLUDE_ALL_ComGoogleCommonReflectTypes || defined(INCLUDE_ComGoogleCommonReflectTypes_NativeTypeVariableEquals))
#define ComGoogleCommonReflectTypes_NativeTypeVariableEquals_

@interface ComGoogleCommonReflectTypes_NativeTypeVariableEquals : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)

inline jboolean ComGoogleCommonReflectTypes_NativeTypeVariableEquals_get_NATIVE_TYPE_VARIABLE_ONLY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean ComGoogleCommonReflectTypes_NativeTypeVariableEquals_NATIVE_TYPE_VARIABLE_ONLY;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonReflectTypes_NativeTypeVariableEquals, NATIVE_TYPE_VARIABLE_ONLY, jboolean)

FOUNDATION_EXPORT void ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init(ComGoogleCommonReflectTypes_NativeTypeVariableEquals *self);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_NativeTypeVariableEquals *new_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_NativeTypeVariableEquals *create_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonReflectTypes")
