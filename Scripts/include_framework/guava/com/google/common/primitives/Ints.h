//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/primitives/Ints.java
//

#include "../../../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesInts")
#ifdef RESTRICT_ComGoogleCommonPrimitivesInts
#define INCLUDE_ALL_ComGoogleCommonPrimitivesInts 0
#else
#define INCLUDE_ALL_ComGoogleCommonPrimitivesInts 1
#endif
#undef RESTRICT_ComGoogleCommonPrimitivesInts

#if !defined (ComGoogleCommonPrimitivesInts_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesInts || defined(INCLUDE_ComGoogleCommonPrimitivesInts))
#define ComGoogleCommonPrimitivesInts_

@class ComGoogleCommonBaseConverter;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

@interface ComGoogleCommonPrimitivesInts : NSObject

#pragma mark Public

+ (id<JavaUtilList>)asListWithIntArray:(IOSIntArray *)backingArray;

+ (jint)checkedCastWithLong:(jlong)value;

+ (jint)compareWithInt:(jint)a
               withInt:(jint)b;

+ (IOSIntArray *)concatWithIntArray2:(IOSObjectArray *)arrays;

+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)target;

+ (IOSIntArray *)ensureCapacityWithIntArray:(IOSIntArray *)array
                                    withInt:(jint)minLength
                                    withInt:(jint)padding;

+ (jint)fromByteArrayWithByteArray:(IOSByteArray *)bytes;

+ (jint)fromBytesWithByte:(jbyte)b1
                 withByte:(jbyte)b2
                 withByte:(jbyte)b3
                 withByte:(jbyte)b4;

+ (jint)hashCodeWithInt:(jint)value;

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)target;

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
               withIntArray:(IOSIntArray *)target;

+ (NSString *)joinWithNSString:(NSString *)separator
                  withIntArray:(IOSIntArray *)array;

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)target;

+ (id<JavaUtilComparator>)lexicographicalComparator;

+ (jint)maxWithIntArray:(IOSIntArray *)array;

+ (jint)minWithIntArray:(IOSIntArray *)array;

+ (jint)saturatedCastWithLong:(jlong)value;

+ (ComGoogleCommonBaseConverter *)stringConverter;

+ (IOSIntArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (IOSByteArray *)toByteArrayWithInt:(jint)value;

+ (JavaLangInteger *)tryParseWithNSString:(NSString *)string;

+ (JavaLangInteger *)tryParseWithNSString:(NSString *)string
                                  withInt:(jint)radix;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesInts)

inline jint ComGoogleCommonPrimitivesInts_get_BYTES();
#define ComGoogleCommonPrimitivesInts_BYTES 4
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesInts, BYTES, jint)

inline jint ComGoogleCommonPrimitivesInts_get_MAX_POWER_OF_TWO();
#define ComGoogleCommonPrimitivesInts_MAX_POWER_OF_TWO 1073741824
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesInts, MAX_POWER_OF_TWO, jint)

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_hashCodeWithInt_(jint value);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_checkedCastWithLong_(jlong value);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_saturatedCastWithLong_(jlong value);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_compareWithInt_withInt_(jint a, jint b);

FOUNDATION_EXPORT jboolean ComGoogleCommonPrimitivesInts_containsWithIntArray_withInt_(IOSIntArray *array, jint target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_(IOSIntArray *array, jint target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_(IOSIntArray *array, jint target);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_minWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_maxWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonPrimitivesInts_concatWithIntArray2_(IOSObjectArray *arrays);

FOUNDATION_EXPORT IOSByteArray *ComGoogleCommonPrimitivesInts_toByteArrayWithInt_(jint value);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_fromByteArrayWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_(jbyte b1, jbyte b2, jbyte b3, jbyte b4);

FOUNDATION_EXPORT ComGoogleCommonBaseConverter *ComGoogleCommonPrimitivesInts_stringConverter();

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonPrimitivesInts_ensureCapacityWithIntArray_withInt_withInt_(IOSIntArray *array, jint minLength, jint padding);

FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesInts_joinWithNSString_withIntArray_(NSString *separator, IOSIntArray *array);

FOUNDATION_EXPORT id<JavaUtilComparator> ComGoogleCommonPrimitivesInts_lexicographicalComparator();

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonPrimitivesInts_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection);

FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonPrimitivesInts_asListWithIntArray_(IOSIntArray *backingArray);

FOUNDATION_EXPORT JavaLangInteger *ComGoogleCommonPrimitivesInts_tryParseWithNSString_(NSString *string);

FOUNDATION_EXPORT JavaLangInteger *ComGoogleCommonPrimitivesInts_tryParseWithNSString_withInt_(NSString *string, jint radix);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesInts)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesInts")
