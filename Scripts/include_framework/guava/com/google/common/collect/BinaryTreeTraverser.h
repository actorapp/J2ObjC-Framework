//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/collect/BinaryTreeTraverser.java
//

#include "../../../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectBinaryTreeTraverser")
#ifdef RESTRICT_ComGoogleCommonCollectBinaryTreeTraverser
#define INCLUDE_ALL_ComGoogleCommonCollectBinaryTreeTraverser 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectBinaryTreeTraverser 1
#endif
#undef RESTRICT_ComGoogleCommonCollectBinaryTreeTraverser

#if !defined (ComGoogleCommonCollectBinaryTreeTraverser_) && (INCLUDE_ALL_ComGoogleCommonCollectBinaryTreeTraverser || defined(INCLUDE_ComGoogleCommonCollectBinaryTreeTraverser))
#define ComGoogleCommonCollectBinaryTreeTraverser_

#define RESTRICT_ComGoogleCommonCollectTreeTraverser 1
#define INCLUDE_ComGoogleCommonCollectTreeTraverser 1
#include "../../../../../com/google/common/collect/TreeTraverser.h"

@class ComGoogleCommonBaseOptional;
@class ComGoogleCommonCollectFluentIterable;
@class ComGoogleCommonCollectUnmodifiableIterator;
@protocol JavaLangIterable;

@interface ComGoogleCommonCollectBinaryTreeTraverser : ComGoogleCommonCollectTreeTraverser

#pragma mark Public

- (instancetype)init;

- (id<JavaLangIterable>)childrenWithId:(id)root;

- (ComGoogleCommonCollectFluentIterable *)inOrderTraversalWithId:(id)root;

- (ComGoogleCommonBaseOptional *)leftChildWithId:(id)root;

- (ComGoogleCommonBaseOptional *)rightChildWithId:(id)root;

#pragma mark Package-Private

- (ComGoogleCommonCollectUnmodifiableIterator *)postOrderIteratorWithId:(id)root;

- (ComGoogleCommonCollectUnmodifiableIterator *)preOrderIteratorWithId:(id)root;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectBinaryTreeTraverser)

FOUNDATION_EXPORT void ComGoogleCommonCollectBinaryTreeTraverser_init(ComGoogleCommonCollectBinaryTreeTraverser *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectBinaryTreeTraverser)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectBinaryTreeTraverser")
