//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/util/concurrent/AbstractScheduledService.java
//

#include "../../../../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentAbstractScheduledService
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentAbstractScheduledService
#ifdef INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler
#define INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler 1
#endif

#if !defined (ComGoogleCommonUtilConcurrentAbstractScheduledService_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService || defined(INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService))
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_

#define RESTRICT_ComGoogleCommonUtilConcurrentService 1
#define INCLUDE_ComGoogleCommonUtilConcurrentService 1
#include "../../../../../../com/google/common/util/concurrent/Service.h"

@class ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler;
@class ComGoogleCommonUtilConcurrentService_Listener;
@class ComGoogleCommonUtilConcurrentService_State;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService : NSObject < ComGoogleCommonUtilConcurrentService >

#pragma mark Public

- (void)addListenerWithComGoogleCommonUtilConcurrentService_Listener:(ComGoogleCommonUtilConcurrentService_Listener *)listener
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (void)awaitRunning;

- (void)awaitRunningWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)awaitTerminated;

- (void)awaitTerminatedWithLong:(jlong)timeout
 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (NSException *)failureCause;

- (jboolean)isRunning;

- (id<ComGoogleCommonUtilConcurrentService>)startAsync;

- (ComGoogleCommonUtilConcurrentService_State *)state;

- (id<ComGoogleCommonUtilConcurrentService>)stopAsync;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

- (id<JavaUtilConcurrentScheduledExecutorService>)executor;

- (void)runOneIteration;

- (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)scheduler;

- (NSString *)serviceName;

- (void)shutDown;

- (void)startUp;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_init(ComGoogleCommonUtilConcurrentAbstractScheduledService *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService)

#endif

#if !defined (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService || defined(INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler))
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_

@class ComGoogleCommonUtilConcurrentAbstractService;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler : NSObject

#pragma mark Public

+ (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)newFixedDelayScheduleWithLong:(jlong)initialDelay
                                                                                          withLong:(jlong)delay
                                                                    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *)newFixedRateScheduleWithLong:(jlong)initialDelay
                                                                                         withLong:(jlong)period
                                                                   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (id<JavaUtilConcurrentFuture>)scheduleWithComGoogleCommonUtilConcurrentAbstractService:(ComGoogleCommonUtilConcurrentAbstractService *)service
                                          withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executor
                                                                    withJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_newFixedDelayScheduleWithLong_withLong_withJavaUtilConcurrentTimeUnit_(jlong initialDelay, jlong delay, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler *ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler_newFixedRateScheduleWithLong_withLong_withJavaUtilConcurrentTimeUnit_(jlong initialDelay, jlong period, JavaUtilConcurrentTimeUnit *unit);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler)

#endif

#if !defined (ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService || defined(INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler))
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_

@class ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule;
@class ComGoogleCommonUtilConcurrentAbstractService;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler : ComGoogleCommonUtilConcurrentAbstractScheduledService_Scheduler

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *)getNextSchedule;

#pragma mark Package-Private

- (id<JavaUtilConcurrentFuture>)scheduleWithComGoogleCommonUtilConcurrentAbstractService:(ComGoogleCommonUtilConcurrentAbstractService *)service
                                          withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executor
                                                                    withJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_init(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler)

#endif

#if !defined (ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService || defined(INCLUDE_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule))
#define ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_

@class JavaUtilConcurrentTimeUnit;

@interface ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)delay
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_initWithLong_withJavaUtilConcurrentTimeUnit_(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *self, jlong delay, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *new_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong delay, JavaUtilConcurrentTimeUnit *unit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule *create_ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong delay, JavaUtilConcurrentTimeUnit *unit);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractScheduledService_CustomScheduler_Schedule)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAbstractScheduledService")
