//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/SSLException.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNetSslSSLException")
#ifdef RESTRICT_JavaxNetSslSSLException
#define INCLUDE_ALL_JavaxNetSslSSLException 0
#else
#define INCLUDE_ALL_JavaxNetSslSSLException 1
#endif
#undef RESTRICT_JavaxNetSslSSLException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaxNetSslSSLException_) && (INCLUDE_ALL_JavaxNetSslSSLException || defined(INCLUDE_JavaxNetSslSSLException))
#define JavaxNetSslSSLException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "../../../java/io/IOException.h"

/*!
 @brief The base class for all SSL related exceptions.
 */
@interface JavaxNetSslSSLException : JavaIoIOException

#pragma mark Public

/*!
 @brief Creates a new <code>SSLException</code> with the specified reason.
 @param reason
 the reason for the exception.
 */
- (instancetype)initWithNSString:(NSString *)reason;

/*!
 @brief Creates a new <code>SSLException</code> with the specified message and cause.
 @param message
 the detail message for the exception.
 @param cause
 the cause.
 */
- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

/*!
 @brief Creates a new <code>SSLException</code> with the specified cause.
 @param cause
 the cause
 */
- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_STATIC_INIT(JavaxNetSslSSLException)

FOUNDATION_EXPORT void JavaxNetSslSSLException_initWithNSString_(JavaxNetSslSSLException *self, NSString *reason);

FOUNDATION_EXPORT JavaxNetSslSSLException *new_JavaxNetSslSSLException_initWithNSString_(NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNetSslSSLException *create_JavaxNetSslSSLException_initWithNSString_(NSString *reason);

FOUNDATION_EXPORT void JavaxNetSslSSLException_initWithNSString_withNSException_(JavaxNetSslSSLException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT JavaxNetSslSSLException *new_JavaxNetSslSSLException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNetSslSSLException *create_JavaxNetSslSSLException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void JavaxNetSslSSLException_initWithNSException_(JavaxNetSslSSLException *self, NSException *cause);

FOUNDATION_EXPORT JavaxNetSslSSLException *new_JavaxNetSslSSLException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNetSslSSLException *create_JavaxNetSslSSLException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxNetSslSSLException")
