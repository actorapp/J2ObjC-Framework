//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/text/ParsePosition.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaTextParsePosition")
#ifdef RESTRICT_JavaTextParsePosition
#define INCLUDE_ALL_JavaTextParsePosition 0
#else
#define INCLUDE_ALL_JavaTextParsePosition 1
#endif
#undef RESTRICT_JavaTextParsePosition

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaTextParsePosition_) && (INCLUDE_ALL_JavaTextParsePosition || defined(INCLUDE_JavaTextParsePosition))
#define JavaTextParsePosition_

/*!
 @brief Tracks the current position in a parsed string.
 In case of an error the error
 index can be set to the position where the error occurred without having to
 change the parse position.
 */
@interface JavaTextParsePosition : NSObject

#pragma mark Public

/*!
 @brief Constructs a new <code>ParsePosition</code> with the specified index.
 @param index
 the index to begin parsing.
 */
- (instancetype)initWithInt:(jint)index;

/*!
 @brief Compares the specified object to this <code>ParsePosition</code> and indicates
 if they are equal.
 In order to be equal, <code>object</code> must be an
 instance of <code>ParsePosition</code> and it must have the same index and
 error index.
 @param object
 the object to compare with this object.
 @return <code>true</code> if the specified object is equal to this
 <code>ParsePosition</code>; <code>false</code> otherwise.
 - seealso: #hashCode
 */
- (jboolean)isEqual:(id)object;

/*!
 @brief Returns the index at which the parse could not continue.
 @return the index of the parse error or -1 if there is no error.
 */
- (jint)getErrorIndex;

/*!
 @brief Returns the current parse position.
 @return the current position.
 */
- (jint)getIndex;

- (NSUInteger)hash;

/*!
 @brief Sets the index at which the parse could not continue.
 @param index
 the index of the parse error.
 */
- (void)setErrorIndexWithInt:(jint)index;

/*!
 @brief Sets the current parse position.
 @param index
 the current parse position.
 */
- (void)setIndexWithInt:(jint)index;

/*!
 @brief Returns the string representation of this parse position.
 @return the string representation of this parse position.
 */
- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaTextParsePosition)

FOUNDATION_EXPORT void JavaTextParsePosition_initWithInt_(JavaTextParsePosition *self, jint index);

FOUNDATION_EXPORT JavaTextParsePosition *new_JavaTextParsePosition_initWithInt_(jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaTextParsePosition *create_JavaTextParsePosition_initWithInt_(jint index);

J2OBJC_TYPE_LITERAL_HEADER(JavaTextParsePosition)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaTextParsePosition")
