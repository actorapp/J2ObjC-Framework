//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/UncheckedIOException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoUncheckedIOException")
#ifdef RESTRICT_JavaIoUncheckedIOException
#define INCLUDE_ALL_JavaIoUncheckedIOException 0
#else
#define INCLUDE_ALL_JavaIoUncheckedIOException 1
#endif
#undef RESTRICT_JavaIoUncheckedIOException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaIoUncheckedIOException_) && (INCLUDE_ALL_JavaIoUncheckedIOException || defined(INCLUDE_JavaIoUncheckedIOException))
#define JavaIoUncheckedIOException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "../../java/lang/RuntimeException.h"

@class JavaIoIOException;

/*!
 @brief Wraps an <code>IOException</code> with an unchecked exception.
 @since 1.8
 */
@interface JavaIoUncheckedIOException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Constructs an instance of this class.
 @param cause
 the <code>IOException</code>
 @throws NullPointerException
 if the cause is <code>null</code>
 */
- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)cause;

/*!
 @brief Constructs an instance of this class.
 @param message
 the detail message, can be null
 @param cause
 the <code>IOException</code>
 @throws NullPointerException
 if the cause is <code>null</code>
 */
- (instancetype)initWithNSString:(NSString *)message
           withJavaIoIOException:(JavaIoIOException *)cause;

/*!
 @brief Returns the cause of this exception.
 @return the <code>IOException</code> which is the cause of this exception.
 */
- (JavaIoIOException *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoUncheckedIOException)

FOUNDATION_EXPORT void JavaIoUncheckedIOException_initWithNSString_withJavaIoIOException_(JavaIoUncheckedIOException *self, NSString *message, JavaIoIOException *cause);

FOUNDATION_EXPORT JavaIoUncheckedIOException *new_JavaIoUncheckedIOException_initWithNSString_withJavaIoIOException_(NSString *message, JavaIoIOException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoUncheckedIOException *create_JavaIoUncheckedIOException_initWithNSString_withJavaIoIOException_(NSString *message, JavaIoIOException *cause);

FOUNDATION_EXPORT void JavaIoUncheckedIOException_initWithJavaIoIOException_(JavaIoUncheckedIOException *self, JavaIoIOException *cause);

FOUNDATION_EXPORT JavaIoUncheckedIOException *new_JavaIoUncheckedIOException_initWithJavaIoIOException_(JavaIoIOException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoUncheckedIOException *create_JavaIoUncheckedIOException_initWithJavaIoIOException_(JavaIoIOException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoUncheckedIOException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaIoUncheckedIOException")
