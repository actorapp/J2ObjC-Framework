//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/verification/checkers/MissingInvocationChecker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalVerificationCheckersMissingInvocationChecker")
#ifdef RESTRICT_OrgMockitoInternalVerificationCheckersMissingInvocationChecker
#define INCLUDE_ALL_OrgMockitoInternalVerificationCheckersMissingInvocationChecker 0
#else
#define INCLUDE_ALL_OrgMockitoInternalVerificationCheckersMissingInvocationChecker 1
#endif
#undef RESTRICT_OrgMockitoInternalVerificationCheckersMissingInvocationChecker

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (OrgMockitoInternalVerificationCheckersMissingInvocationChecker_) && (INCLUDE_ALL_OrgMockitoInternalVerificationCheckersMissingInvocationChecker || defined(INCLUDE_OrgMockitoInternalVerificationCheckersMissingInvocationChecker))
#define OrgMockitoInternalVerificationCheckersMissingInvocationChecker_

@class OrgMockitoExceptionsReporter;
@class OrgMockitoInternalInvocationInvocationMatcher;
@class OrgMockitoInternalInvocationInvocationsFinder;
@protocol JavaUtilList;

@interface OrgMockitoInternalVerificationCheckersMissingInvocationChecker : NSObject

#pragma mark Public

- (instancetype)init;

- (void)checkWithJavaUtilList:(id<JavaUtilList>)invocations
withOrgMockitoInternalInvocationInvocationMatcher:(OrgMockitoInternalInvocationInvocationMatcher *)wanted;

#pragma mark Package-Private

- (instancetype)initWithOrgMockitoInternalInvocationInvocationsFinder:(OrgMockitoInternalInvocationInvocationsFinder *)finder
                                     withOrgMockitoExceptionsReporter:(OrgMockitoExceptionsReporter *)reporter;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalVerificationCheckersMissingInvocationChecker)

FOUNDATION_EXPORT void OrgMockitoInternalVerificationCheckersMissingInvocationChecker_init(OrgMockitoInternalVerificationCheckersMissingInvocationChecker *self);

FOUNDATION_EXPORT OrgMockitoInternalVerificationCheckersMissingInvocationChecker *new_OrgMockitoInternalVerificationCheckersMissingInvocationChecker_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalVerificationCheckersMissingInvocationChecker *create_OrgMockitoInternalVerificationCheckersMissingInvocationChecker_init();

FOUNDATION_EXPORT void OrgMockitoInternalVerificationCheckersMissingInvocationChecker_initWithOrgMockitoInternalInvocationInvocationsFinder_withOrgMockitoExceptionsReporter_(OrgMockitoInternalVerificationCheckersMissingInvocationChecker *self, OrgMockitoInternalInvocationInvocationsFinder *finder, OrgMockitoExceptionsReporter *reporter);

FOUNDATION_EXPORT OrgMockitoInternalVerificationCheckersMissingInvocationChecker *new_OrgMockitoInternalVerificationCheckersMissingInvocationChecker_initWithOrgMockitoInternalInvocationInvocationsFinder_withOrgMockitoExceptionsReporter_(OrgMockitoInternalInvocationInvocationsFinder *finder, OrgMockitoExceptionsReporter *reporter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalVerificationCheckersMissingInvocationChecker *create_OrgMockitoInternalVerificationCheckersMissingInvocationChecker_initWithOrgMockitoInternalInvocationInvocationsFinder_withOrgMockitoExceptionsReporter_(OrgMockitoInternalInvocationInvocationsFinder *finder, OrgMockitoExceptionsReporter *reporter);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalVerificationCheckersMissingInvocationChecker)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalVerificationCheckersMissingInvocationChecker")
