//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/matchers/Not.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalMatchersNot")
#ifdef RESTRICT_OrgMockitoInternalMatchersNot
#define INCLUDE_ALL_OrgMockitoInternalMatchersNot 0
#else
#define INCLUDE_ALL_OrgMockitoInternalMatchersNot 1
#endif
#undef RESTRICT_OrgMockitoInternalMatchersNot

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (OrgMockitoInternalMatchersNot_) && (INCLUDE_ALL_OrgMockitoInternalMatchersNot || defined(INCLUDE_OrgMockitoInternalMatchersNot))
#define OrgMockitoInternalMatchersNot_

#define RESTRICT_OrgMockitoArgumentMatcher 1
#define INCLUDE_OrgMockitoArgumentMatcher 1
#include "org/mockito/ArgumentMatcher.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol OrgHamcrestDescription;
@protocol OrgHamcrestMatcher;

@interface OrgMockitoInternalMatchersNot : OrgMockitoArgumentMatcher < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)first;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

- (jboolean)matchesWithId:(id)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalMatchersNot)

FOUNDATION_EXPORT void OrgMockitoInternalMatchersNot_initWithOrgHamcrestMatcher_(OrgMockitoInternalMatchersNot *self, id<OrgHamcrestMatcher> first);

FOUNDATION_EXPORT OrgMockitoInternalMatchersNot *new_OrgMockitoInternalMatchersNot_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> first) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalMatchersNot *create_OrgMockitoInternalMatchersNot_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> first);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalMatchersNot)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalMatchersNot")
