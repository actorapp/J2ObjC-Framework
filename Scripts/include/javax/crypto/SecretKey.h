//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/crypto/SecretKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxCryptoSecretKey")
#ifdef RESTRICT_JavaxCryptoSecretKey
#define INCLUDE_ALL_JavaxCryptoSecretKey 0
#else
#define INCLUDE_ALL_JavaxCryptoSecretKey 1
#endif
#undef RESTRICT_JavaxCryptoSecretKey

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaxCryptoSecretKey_) && (INCLUDE_ALL_JavaxCryptoSecretKey || defined(INCLUDE_JavaxCryptoSecretKey))
#define JavaxCryptoSecretKey_

#define RESTRICT_JavaSecurityKey 1
#define INCLUDE_JavaSecurityKey 1
#include "java/security/Key.h"

/*!
 @brief A cryptographic secret (symmetric) key.
 <p>
 This interface is a <i>marker interface</i> to group secret keys and to
 provide type safety for.
 <p>
 Implementations of this interface have to overwrite the
 <code>equals</code> and <code>hashCode</code>
 from <code>java.lang.Object</code> so comparison is done using the actual key data
 and not the object reference.
 */
@protocol JavaxCryptoSecretKey < JavaSecurityKey, JavaObject >

@end

@interface JavaxCryptoSecretKey : NSObject

+ (jlong)serialVersionUID;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxCryptoSecretKey)

/*!
 @brief The serialization version identifier.
 */
inline jlong JavaxCryptoSecretKey_get_serialVersionUID();
#define JavaxCryptoSecretKey_serialVersionUID -4795878709595146952LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxCryptoSecretKey, serialVersionUID, jlong)

J2OBJC_TYPE_LITERAL_HEADER(JavaxCryptoSecretKey)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxCryptoSecretKey")
