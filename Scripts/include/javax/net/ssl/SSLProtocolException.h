//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/SSLProtocolException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNetSslSSLProtocolException")
#ifdef RESTRICT_JavaxNetSslSSLProtocolException
#define INCLUDE_ALL_JavaxNetSslSSLProtocolException 0
#else
#define INCLUDE_ALL_JavaxNetSslSSLProtocolException 1
#endif
#undef RESTRICT_JavaxNetSslSSLProtocolException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaxNetSslSSLProtocolException_) && (INCLUDE_ALL_JavaxNetSslSSLProtocolException || defined(INCLUDE_JavaxNetSslSSLProtocolException))
#define JavaxNetSslSSLProtocolException_

#define RESTRICT_JavaxNetSslSSLException 1
#define INCLUDE_JavaxNetSslSSLException 1
#include "javax/net/ssl/SSLException.h"

/*!
 @brief The exception that is thrown when an error in the operation of the SSL
 protocol is encountered.
 */
@interface JavaxNetSslSSLProtocolException : JavaxNetSslSSLException

#pragma mark Public

/*!
 @brief Creates a new <code>SSLProtocolException</code> with the specified message.
 @param reason
 the detail message for the exception.
 */
- (instancetype)initWithNSString:(NSString *)reason;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslSSLProtocolException)

FOUNDATION_EXPORT void JavaxNetSslSSLProtocolException_initWithNSString_(JavaxNetSslSSLProtocolException *self, NSString *reason);

FOUNDATION_EXPORT JavaxNetSslSSLProtocolException *new_JavaxNetSslSSLProtocolException_initWithNSString_(NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNetSslSSLProtocolException *create_JavaxNetSslSSLProtocolException_initWithNSString_(NSString *reason);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLProtocolException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxNetSslSSLProtocolException")
