//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/net/SocketException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNetSocketException")
#ifdef RESTRICT_JavaNetSocketException
#define INCLUDE_ALL_JavaNetSocketException 0
#else
#define INCLUDE_ALL_JavaNetSocketException 1
#endif
#undef RESTRICT_JavaNetSocketException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNetSocketException_) && (INCLUDE_ALL_JavaNetSocketException || defined(INCLUDE_JavaNetSocketException))
#define JavaNetSocketException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

/*!
 @brief Thrown to indicate that there is an error creating or accessing a Socket.
 @author Jonathan Payne
 @since JDK1.0
 */
@interface JavaNetSocketException : JavaIoIOException

#pragma mark Public

/*!
 @brief Constructs a new <code>SocketException</code> with no detail message.
 */
- (instancetype)init;

/*!
 @brief Constructs a new <code>SocketException</code> with the
 specified detail message.
 @param msg the detail message.
 */
- (instancetype)initWithNSString:(NSString *)msg;

/*!
  
 */
- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause;

/*!
  
 */
- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNetSocketException)

FOUNDATION_EXPORT void JavaNetSocketException_initWithNSString_(JavaNetSocketException *self, NSString *msg);

FOUNDATION_EXPORT JavaNetSocketException *new_JavaNetSocketException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetSocketException *create_JavaNetSocketException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void JavaNetSocketException_init(JavaNetSocketException *self);

FOUNDATION_EXPORT JavaNetSocketException *new_JavaNetSocketException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetSocketException *create_JavaNetSocketException_init();

FOUNDATION_EXPORT void JavaNetSocketException_initWithNSException_(JavaNetSocketException *self, NSException *cause);

FOUNDATION_EXPORT JavaNetSocketException *new_JavaNetSocketException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetSocketException *create_JavaNetSocketException_initWithNSException_(NSException *cause);

FOUNDATION_EXPORT void JavaNetSocketException_initWithNSString_withNSException_(JavaNetSocketException *self, NSString *msg, NSException *cause);

FOUNDATION_EXPORT JavaNetSocketException *new_JavaNetSocketException_initWithNSString_withNSException_(NSString *msg, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetSocketException *create_JavaNetSocketException_initWithNSString_withNSException_(NSString *msg, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaNetSocketException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaNetSocketException")
