//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/net/PlainSocketImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNetPlainSocketImpl")
#ifdef RESTRICT_JavaNetPlainSocketImpl
#define INCLUDE_ALL_JavaNetPlainSocketImpl 0
#else
#define INCLUDE_ALL_JavaNetPlainSocketImpl 1
#endif
#undef RESTRICT_JavaNetPlainSocketImpl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNetPlainSocketImpl_) && (INCLUDE_ALL_JavaNetPlainSocketImpl || defined(INCLUDE_JavaNetPlainSocketImpl))
#define JavaNetPlainSocketImpl_

#define RESTRICT_JavaNetSocketImpl 1
#define INCLUDE_JavaNetSocketImpl 1
#include "java/net/SocketImpl.h"

@class JavaIoFileDescriptor;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaNetInetAddress;
@class JavaNetProxy;
@class JavaNetSocketAddress;

/*!
  used in java.nio.
 */
@interface JavaNetPlainSocketImpl : JavaNetSocketImpl

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd;

- (instancetype)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
                                     withInt:(jint)localport
                      withJavaNetInetAddress:(JavaNetInetAddress *)addr
                                     withInt:(jint)port;

- (instancetype)initWithJavaNetProxy:(JavaNetProxy *)proxy;

- (id)getOptionWithInt:(jint)option;

- (void)initLocalPortWithInt:(jint)localPort OBJC_METHOD_FAMILY_NONE;

- (void)initRemoteAddressAndPortWithJavaNetInetAddress:(JavaNetInetAddress *)remoteAddress
                                               withInt:(jint)remotePort OBJC_METHOD_FAMILY_NONE;

- (void)setOptionWithInt:(jint)option
                  withId:(id)value;

/*!
 @brief Perform an accept for a SOCKS bind.
 */
- (void)socksAccept;

#pragma mark Protected

- (void)acceptWithJavaNetSocketImpl:(JavaNetSocketImpl *)newImpl;

- (jint)available;

- (void)bindWithJavaNetInetAddress:(JavaNetInetAddress *)address
                           withInt:(jint)port;

- (void)close;

- (void)connectWithJavaNetInetAddress:(JavaNetInetAddress *)anAddr
                              withInt:(jint)aPort;

- (void)connectWithJavaNetSocketAddress:(JavaNetSocketAddress *)remoteAddr
                                withInt:(jint)timeout;

- (void)connectWithNSString:(NSString *)aHost
                    withInt:(jint)aPort;

- (void)createWithBoolean:(jboolean)streaming;

- (void)javaFinalize;

- (JavaIoInputStream *)getInputStream;

- (JavaIoOutputStream *)getOutputStream;

- (void)listenWithInt:(jint)backlog;

- (void)sendUrgentDataWithInt:(jint)value;

/*!
 @brief Shutdown the input portion of the socket.
 */
- (void)shutdownInput;

/*!
 @brief Shutdown the output portion of the socket.
 */
- (void)shutdownOutput;

- (jboolean)supportsUrgentData;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNetPlainSocketImpl)

FOUNDATION_EXPORT void JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_(JavaNetPlainSocketImpl *self, JavaIoFileDescriptor *fd);

FOUNDATION_EXPORT JavaNetPlainSocketImpl *new_JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *fd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetPlainSocketImpl *create_JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *fd);

FOUNDATION_EXPORT void JavaNetPlainSocketImpl_initWithJavaNetProxy_(JavaNetPlainSocketImpl *self, JavaNetProxy *proxy);

FOUNDATION_EXPORT JavaNetPlainSocketImpl *new_JavaNetPlainSocketImpl_initWithJavaNetProxy_(JavaNetProxy *proxy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetPlainSocketImpl *create_JavaNetPlainSocketImpl_initWithJavaNetProxy_(JavaNetProxy *proxy);

FOUNDATION_EXPORT void JavaNetPlainSocketImpl_init(JavaNetPlainSocketImpl *self);

FOUNDATION_EXPORT JavaNetPlainSocketImpl *new_JavaNetPlainSocketImpl_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetPlainSocketImpl *create_JavaNetPlainSocketImpl_init();

FOUNDATION_EXPORT void JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_withInt_withJavaNetInetAddress_withInt_(JavaNetPlainSocketImpl *self, JavaIoFileDescriptor *fd, jint localport, JavaNetInetAddress *addr, jint port);

FOUNDATION_EXPORT JavaNetPlainSocketImpl *new_JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_withInt_withJavaNetInetAddress_withInt_(JavaIoFileDescriptor *fd, jint localport, JavaNetInetAddress *addr, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNetPlainSocketImpl *create_JavaNetPlainSocketImpl_initWithJavaIoFileDescriptor_withInt_withJavaNetInetAddress_withInt_(JavaIoFileDescriptor *fd, jint localport, JavaNetInetAddress *addr, jint port);

J2OBJC_TYPE_LITERAL_HEADER(JavaNetPlainSocketImpl)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaNetPlainSocketImpl")
