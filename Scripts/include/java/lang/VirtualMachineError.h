//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/lang/VirtualMachineError.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangVirtualMachineError")
#ifdef RESTRICT_JavaLangVirtualMachineError
#define INCLUDE_ALL_JavaLangVirtualMachineError 0
#else
#define INCLUDE_ALL_JavaLangVirtualMachineError 1
#endif
#undef RESTRICT_JavaLangVirtualMachineError

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangVirtualMachineError_) && (INCLUDE_ALL_JavaLangVirtualMachineError || defined(INCLUDE_JavaLangVirtualMachineError))
#define JavaLangVirtualMachineError_

#define RESTRICT_JavaLangError 1
#define INCLUDE_JavaLangError 1
#include "java/lang/Error.h"

/*!
 @brief Thrown to indicate that the Java Virtual Machine is broken or has
 run out of resources necessary for it to continue operating.
 @author Frank Yellin
 @since JDK1.0
 */
@interface JavaLangVirtualMachineError : JavaLangError

#pragma mark Public

/*!
 @brief Constructs a <code>VirtualMachineError</code> with no detail message.
 */
- (instancetype)init;

/*!
 @brief Constructs a <code>VirtualMachineError</code> with the specified
 detail message.
 @param message   the detail message.
 */
- (instancetype)initWithNSString:(NSString *)message;

/*!
 @brief Constructs a <code>VirtualMachineError</code> with the specified
 detail message and cause.
 <p>Note that the detail message
 associated with <code>cause</code> is <i>not</i> automatically
 incorporated in this error's detail message.
 @param message the detail message (which is saved for later retrieval
 by the <code>getMessage()</code> method).
 @param cause the cause (which is saved for later retrieval by the
 <code>getCause()</code> method).  (A <code>null</code> value is
 permitted, and indicates that the cause is nonexistent or
 unknown.)
 @since 1.8
 */
- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

/*!
 @brief Constructs an a <code>VirtualMachineError</code> with the specified
 cause and a detail message of <code>(cause==null ?
 null :
 cause.toString())</code>
  (which typically contains the class and
 detail message of <code>cause</code>).
 @param cause the cause (which is saved for later retrieval by the
 <code>getCause()</code> method).  (A <code>null</code> value is
 permitted, and indicates that the cause is nonexistent or
 unknown.)
 @since 1.8
 */
- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangVirtualMachineError)

FOUNDATION_EXPORT void JavaLangVirtualMachineError_init(JavaLangVirtualMachineError *self);

FOUNDATION_EXPORT void JavaLangVirtualMachineError_initWithNSString_(JavaLangVirtualMachineError *self, NSString *message);

FOUNDATION_EXPORT void JavaLangVirtualMachineError_initWithNSString_withNSException_(JavaLangVirtualMachineError *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT void JavaLangVirtualMachineError_initWithNSException_(JavaLangVirtualMachineError *self, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaLangVirtualMachineError)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaLangVirtualMachineError")
