//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/base/FunctionalEquivalence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonBaseFunctionalEquivalence")
#ifdef RESTRICT_ComGoogleCommonBaseFunctionalEquivalence
#define INCLUDE_ALL_ComGoogleCommonBaseFunctionalEquivalence 0
#else
#define INCLUDE_ALL_ComGoogleCommonBaseFunctionalEquivalence 1
#endif
#undef RESTRICT_ComGoogleCommonBaseFunctionalEquivalence

#if !defined (ComGoogleCommonBaseFunctionalEquivalence_) && (INCLUDE_ALL_ComGoogleCommonBaseFunctionalEquivalence || defined(INCLUDE_ComGoogleCommonBaseFunctionalEquivalence))
#define ComGoogleCommonBaseFunctionalEquivalence_

#define RESTRICT_ComGoogleCommonBaseEquivalence 1
#define INCLUDE_ComGoogleCommonBaseEquivalence 1
#include "com/google/common/base/Equivalence.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol ComGoogleCommonBaseFunction;

@interface ComGoogleCommonBaseFunctionalEquivalence : ComGoogleCommonBaseEquivalence < JavaIoSerializable >

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Protected

- (jboolean)doEquivalentWithId:(id)a
                        withId:(id)b;

- (jint)doHashWithId:(id)a;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                 withComGoogleCommonBaseEquivalence:(ComGoogleCommonBaseEquivalence *)resultEquivalence;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseFunctionalEquivalence)

FOUNDATION_EXPORT void ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(ComGoogleCommonBaseFunctionalEquivalence *self, id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence);

FOUNDATION_EXPORT ComGoogleCommonBaseFunctionalEquivalence *new_ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonBaseFunctionalEquivalence *create_ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBaseFunctionalEquivalence)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonBaseFunctionalEquivalence")
