//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/escape/ArrayBasedCharEscaper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedCharEscaper")
#ifdef RESTRICT_ComGoogleCommonEscapeArrayBasedCharEscaper
#define INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedCharEscaper 0
#else
#define INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedCharEscaper 1
#endif
#undef RESTRICT_ComGoogleCommonEscapeArrayBasedCharEscaper

#if !defined (ComGoogleCommonEscapeArrayBasedCharEscaper_) && (INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedCharEscaper || defined(INCLUDE_ComGoogleCommonEscapeArrayBasedCharEscaper))
#define ComGoogleCommonEscapeArrayBasedCharEscaper_

#define RESTRICT_ComGoogleCommonEscapeCharEscaper 1
#define INCLUDE_ComGoogleCommonEscapeCharEscaper 1
#include "com/google/common/escape/CharEscaper.h"

@class ComGoogleCommonEscapeArrayBasedEscaperMap;
@class IOSCharArray;
@protocol JavaUtilMap;

@interface ComGoogleCommonEscapeArrayBasedCharEscaper : ComGoogleCommonEscapeCharEscaper

#pragma mark Public

- (NSString *)escapeWithNSString:(NSString *)s;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonEscapeArrayBasedEscaperMap:(ComGoogleCommonEscapeArrayBasedEscaperMap *)escaperMap
                                                         withChar:(jchar)safeMin
                                                         withChar:(jchar)safeMax;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)replacementMap
                           withChar:(jchar)safeMin
                           withChar:(jchar)safeMax;

- (IOSCharArray *)escapeWithChar:(jchar)c;

- (IOSCharArray *)escapeUnsafeWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeArrayBasedCharEscaper)

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedCharEscaper_initWithJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeArrayBasedCharEscaper *self, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax);

FOUNDATION_EXPORT void ComGoogleCommonEscapeArrayBasedCharEscaper_initWithComGoogleCommonEscapeArrayBasedEscaperMap_withChar_withChar_(ComGoogleCommonEscapeArrayBasedCharEscaper *self, ComGoogleCommonEscapeArrayBasedEscaperMap *escaperMap, jchar safeMin, jchar safeMax);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEscapeArrayBasedCharEscaper)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedCharEscaper")
