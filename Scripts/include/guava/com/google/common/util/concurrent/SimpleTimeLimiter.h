//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/util/concurrent/SimpleTimeLimiter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentSimpleTimeLimiter
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentSimpleTimeLimiter

#if !defined (ComGoogleCommonUtilConcurrentSimpleTimeLimiter_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter || defined(INCLUDE_ComGoogleCommonUtilConcurrentSimpleTimeLimiter))
#define ComGoogleCommonUtilConcurrentSimpleTimeLimiter_

#define RESTRICT_ComGoogleCommonUtilConcurrentTimeLimiter 1
#define INCLUDE_ComGoogleCommonUtilConcurrentTimeLimiter 1
#include "com/google/common/util/concurrent/TimeLimiter.h"

@class IOSClass;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutorService;

@interface ComGoogleCommonUtilConcurrentSimpleTimeLimiter : NSObject < ComGoogleCommonUtilConcurrentTimeLimiter >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)executor;

- (id)callWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                           withLong:(jlong)timeoutDuration
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit
                                        withBoolean:(jboolean)amInterruptible;

- (id)newProxyWithId:(id)target
        withIOSClass:(IOSClass *)interfaceType
            withLong:(jlong)timeoutDuration
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentSimpleTimeLimiter)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentSimpleTimeLimiter_initWithJavaUtilConcurrentExecutorService_(ComGoogleCommonUtilConcurrentSimpleTimeLimiter *self, id<JavaUtilConcurrentExecutorService> executor);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSimpleTimeLimiter *new_ComGoogleCommonUtilConcurrentSimpleTimeLimiter_initWithJavaUtilConcurrentExecutorService_(id<JavaUtilConcurrentExecutorService> executor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSimpleTimeLimiter *create_ComGoogleCommonUtilConcurrentSimpleTimeLimiter_initWithJavaUtilConcurrentExecutorService_(id<JavaUtilConcurrentExecutorService> executor);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentSimpleTimeLimiter_init(ComGoogleCommonUtilConcurrentSimpleTimeLimiter *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSimpleTimeLimiter *new_ComGoogleCommonUtilConcurrentSimpleTimeLimiter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSimpleTimeLimiter *create_ComGoogleCommonUtilConcurrentSimpleTimeLimiter_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentSimpleTimeLimiter)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter")
