//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/collect/RegularImmutableSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableSet")
#ifdef RESTRICT_ComGoogleCommonCollectRegularImmutableSet
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableSet 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableSet 1
#endif
#undef RESTRICT_ComGoogleCommonCollectRegularImmutableSet

#if !defined (ComGoogleCommonCollectRegularImmutableSet_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableSet || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableSet))
#define ComGoogleCommonCollectRegularImmutableSet_

#define RESTRICT_ComGoogleCommonCollectImmutableSet 1
#define INCLUDE_ComGoogleCommonCollectImmutableSet 1
#include "com/google/common/collect/ImmutableSet.h"

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectUnmodifiableIterator;
@class IOSObjectArray;

@interface ComGoogleCommonCollectRegularImmutableSet : ComGoogleCommonCollectImmutableSet {
 @public
  IOSObjectArray *table_;
}

#pragma mark Public

- (jboolean)containsWithId:(id)target;

- (NSUInteger)hash;

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)elements
                              withInt:(jint)hashCode
                    withNSObjectArray:(IOSObjectArray *)table
                              withInt:(jint)mask;

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray *)dst
                               withInt:(jint)offset OBJC_METHOD_FAMILY_NONE;

- (ComGoogleCommonCollectImmutableList *)createAsList;

- (jboolean)isHashCodeFast;

- (jboolean)isPartialView;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCollectRegularImmutableSet)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRegularImmutableSet, table_, IOSObjectArray *)

inline ComGoogleCommonCollectRegularImmutableSet *ComGoogleCommonCollectRegularImmutableSet_get_EMPTY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableSet *ComGoogleCommonCollectRegularImmutableSet_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCollectRegularImmutableSet, EMPTY, ComGoogleCommonCollectRegularImmutableSet *)

FOUNDATION_EXPORT void ComGoogleCommonCollectRegularImmutableSet_initWithNSObjectArray_withInt_withNSObjectArray_withInt_(ComGoogleCommonCollectRegularImmutableSet *self, IOSObjectArray *elements, jint hashCode, IOSObjectArray *table, jint mask);

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableSet *new_ComGoogleCommonCollectRegularImmutableSet_initWithNSObjectArray_withInt_withNSObjectArray_withInt_(IOSObjectArray *elements, jint hashCode, IOSObjectArray *table, jint mask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableSet *create_ComGoogleCommonCollectRegularImmutableSet_initWithNSObjectArray_withInt_withNSObjectArray_withInt_(IOSObjectArray *elements, jint hashCode, IOSObjectArray *table, jint mask);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableSet)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableSet")
