//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/collect/ImmutableBiMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap")
#ifdef RESTRICT_ComGoogleCommonCollectImmutableBiMap
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectImmutableBiMap

#if !defined (ComGoogleCommonCollectImmutableBiMap_) && (INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap || defined(INCLUDE_ComGoogleCommonCollectImmutableBiMap))
#define ComGoogleCommonCollectImmutableBiMap_

#define RESTRICT_ComGoogleCommonCollectImmutableMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableMap 1
#include "com/google/common/collect/ImmutableMap.h"

#define RESTRICT_ComGoogleCommonCollectBiMap 1
#define INCLUDE_ComGoogleCommonCollectBiMap 1
#include "com/google/common/collect/BiMap.h"

@class ComGoogleCommonCollectImmutableBiMap_Builder;
@class ComGoogleCommonCollectImmutableSet;
@protocol JavaLangIterable;
@protocol JavaUtilMap;

@interface ComGoogleCommonCollectImmutableBiMap : ComGoogleCommonCollectImmutableMap < ComGoogleCommonCollectBiMap >

#pragma mark Public

+ (ComGoogleCommonCollectImmutableBiMap_Builder *)builder;

+ (ComGoogleCommonCollectImmutableBiMap *)copyOfWithJavaLangIterable:(id<JavaLangIterable>)entries OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonCollectImmutableBiMap *)copyOfWithJavaUtilMap:(id<JavaUtilMap>)map OBJC_METHOD_FAMILY_NONE;

- (ComGoogleCommonCollectImmutableSet *)entrySet;

- (id)forcePutWithId:(id)key
              withId:(id)value;

- (ComGoogleCommonCollectImmutableBiMap *)inverse;

- (ComGoogleCommonCollectImmutableSet *)keySet;

+ (ComGoogleCommonCollectImmutableBiMap *)of;

+ (ComGoogleCommonCollectImmutableBiMap *)ofWithId:(id)k1
                                            withId:(id)v1;

+ (ComGoogleCommonCollectImmutableBiMap *)ofWithId:(id)k1
                                            withId:(id)v1
                                            withId:(id)k2
                                            withId:(id)v2;

+ (ComGoogleCommonCollectImmutableBiMap *)ofWithId:(id)k1
                                            withId:(id)v1
                                            withId:(id)k2
                                            withId:(id)v2
                                            withId:(id)k3
                                            withId:(id)v3;

+ (ComGoogleCommonCollectImmutableBiMap *)ofWithId:(id)k1
                                            withId:(id)v1
                                            withId:(id)k2
                                            withId:(id)v2
                                            withId:(id)k3
                                            withId:(id)v3
                                            withId:(id)k4
                                            withId:(id)v4;

+ (ComGoogleCommonCollectImmutableBiMap *)ofWithId:(id)k1
                                            withId:(id)v1
                                            withId:(id)k2
                                            withId:(id)v2
                                            withId:(id)k3
                                            withId:(id)v3
                                            withId:(id)k4
                                            withId:(id)v4
                                            withId:(id)k5
                                            withId:(id)v5;

- (ComGoogleCommonCollectImmutableSet *)values;

#pragma mark Package-Private

- (instancetype)init;

- (id)writeReplace;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectImmutableBiMap)

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_of();

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_ofWithId_withId_(id k1, id v1);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_ofWithId_withId_withId_withId_(id k1, id v1, id k2, id v2);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_ofWithId_withId_withId_withId_withId_withId_(id k1, id v1, id k2, id v2, id k3, id v3);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_ofWithId_withId_withId_withId_withId_withId_withId_withId_(id k1, id v1, id k2, id v2, id k3, id v3, id k4, id v4);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_ofWithId_withId_withId_withId_withId_withId_withId_withId_withId_withId_(id k1, id v1, id k2, id v2, id k3, id v3, id k4, id v4, id k5, id v5);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap_Builder *ComGoogleCommonCollectImmutableBiMap_builder();

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_copyOfWithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonCollectImmutableBiMap_copyOfWithJavaLangIterable_(id<JavaLangIterable> entries);

FOUNDATION_EXPORT void ComGoogleCommonCollectImmutableBiMap_init(ComGoogleCommonCollectImmutableBiMap *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectImmutableBiMap)

#endif

#if !defined (ComGoogleCommonCollectImmutableBiMap_Builder_) && (INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap || defined(INCLUDE_ComGoogleCommonCollectImmutableBiMap_Builder))
#define ComGoogleCommonCollectImmutableBiMap_Builder_

#define RESTRICT_ComGoogleCommonCollectImmutableMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableMap_Builder 1
#include "com/google/common/collect/ImmutableMap.h"

@class ComGoogleCommonCollectImmutableBiMap;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;
@protocol JavaUtilMap;
@protocol JavaUtilMap_Entry;

@interface ComGoogleCommonCollectImmutableBiMap_Builder : ComGoogleCommonCollectImmutableMap_Builder

#pragma mark Public

- (instancetype)init;

- (ComGoogleCommonCollectImmutableBiMap *)build;

- (ComGoogleCommonCollectImmutableBiMap_Builder *)orderEntriesByValueWithJavaUtilComparator:(id<JavaUtilComparator>)valueComparator;

- (ComGoogleCommonCollectImmutableBiMap_Builder *)putWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (ComGoogleCommonCollectImmutableBiMap_Builder *)putWithId:(id)key
                                                     withId:(id)value;

- (ComGoogleCommonCollectImmutableBiMap_Builder *)putAllWithJavaLangIterable:(id<JavaLangIterable>)entries;

- (ComGoogleCommonCollectImmutableBiMap_Builder *)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectImmutableBiMap_Builder)

FOUNDATION_EXPORT void ComGoogleCommonCollectImmutableBiMap_Builder_init(ComGoogleCommonCollectImmutableBiMap_Builder *self);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap_Builder *new_ComGoogleCommonCollectImmutableBiMap_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap_Builder *create_ComGoogleCommonCollectImmutableBiMap_Builder_init();

FOUNDATION_EXPORT void ComGoogleCommonCollectImmutableBiMap_Builder_initWithInt_(ComGoogleCommonCollectImmutableBiMap_Builder *self, jint size);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap_Builder *new_ComGoogleCommonCollectImmutableBiMap_Builder_initWithInt_(jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap_Builder *create_ComGoogleCommonCollectImmutableBiMap_Builder_initWithInt_(jint size);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectImmutableBiMap_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMap")
