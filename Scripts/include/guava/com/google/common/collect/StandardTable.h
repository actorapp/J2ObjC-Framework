//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/collect/StandardTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectStandardTable")
#ifdef RESTRICT_ComGoogleCommonCollectStandardTable
#define INCLUDE_ALL_ComGoogleCommonCollectStandardTable 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectStandardTable 1
#endif
#undef RESTRICT_ComGoogleCommonCollectStandardTable
#ifdef INCLUDE_ComGoogleCommonCollectStandardTable_RowMap_EntrySet
#define INCLUDE_ComGoogleCommonCollectStandardTable_TableSet 1
#endif

#if !defined (ComGoogleCommonCollectStandardTable_) && (INCLUDE_ALL_ComGoogleCommonCollectStandardTable || defined(INCLUDE_ComGoogleCommonCollectStandardTable))
#define ComGoogleCommonCollectStandardTable_

#define RESTRICT_ComGoogleCommonCollectAbstractTable 1
#define INCLUDE_ComGoogleCommonCollectAbstractTable 1
#include "com/google/common/collect/AbstractTable.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol ComGoogleCommonBaseSupplier;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectStandardTable : ComGoogleCommonCollectAbstractTable < JavaIoSerializable > {
 @public
  id<JavaUtilMap> backingMap_;
  id<ComGoogleCommonBaseSupplier> factory_;
}

#pragma mark Public

- (id<JavaUtilSet>)cellSet;

- (void)clear;

- (id<JavaUtilMap>)columnWithId:(id)columnKey;

- (id<JavaUtilSet>)columnKeySet;

- (id<JavaUtilMap>)columnMap;

- (jboolean)containsWithId:(id)rowKey
                    withId:(id)columnKey;

- (jboolean)containsColumnWithId:(id)columnKey;

- (jboolean)containsRowWithId:(id)rowKey;

- (jboolean)containsValueWithId:(id)value;

- (id)getWithId:(id)rowKey
         withId:(id)columnKey;

- (jboolean)isEmpty;

- (id)putWithId:(id)rowKey
         withId:(id)columnKey
         withId:(id)value;

- (id)removeWithId:(id)rowKey
            withId:(id)columnKey;

- (id<JavaUtilMap>)rowWithId:(id)rowKey;

- (id<JavaUtilSet>)rowKeySet;

- (id<JavaUtilMap>)rowMap;

- (jint)size;

- (id<JavaUtilCollection>)values;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingMap
    withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)factory;

- (id<JavaUtilIterator>)cellIterator;

- (id<JavaUtilIterator>)createColumnKeyIterator;

- (id<JavaUtilMap>)createRowMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable, backingMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable, factory_, id<ComGoogleCommonBaseSupplier>)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_initWithJavaUtilMap_withComGoogleCommonBaseSupplier_(ComGoogleCommonCollectStandardTable *self, id<JavaUtilMap> backingMap, id<ComGoogleCommonBaseSupplier> factory);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable *new_ComGoogleCommonCollectStandardTable_initWithJavaUtilMap_withComGoogleCommonBaseSupplier_(id<JavaUtilMap> backingMap, id<ComGoogleCommonBaseSupplier> factory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable *create_ComGoogleCommonCollectStandardTable_initWithJavaUtilMap_withComGoogleCommonBaseSupplier_(id<JavaUtilMap> backingMap, id<ComGoogleCommonBaseSupplier> factory);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable)

#endif

#if !defined (ComGoogleCommonCollectStandardTable_TableSet_) && (INCLUDE_ALL_ComGoogleCommonCollectStandardTable || defined(INCLUDE_ComGoogleCommonCollectStandardTable_TableSet))
#define ComGoogleCommonCollectStandardTable_TableSet_

#define RESTRICT_ComGoogleCommonCollectSets 1
#define INCLUDE_ComGoogleCommonCollectSets_ImprovedAbstractSet 1
#include "com/google/common/collect/Sets.h"

@interface ComGoogleCommonCollectStandardTable_TableSet : ComGoogleCommonCollectSets_ImprovedAbstractSet

#pragma mark Public

- (void)clear;

- (jboolean)isEmpty;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_TableSet)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_TableSet)

#endif

#if !defined (ComGoogleCommonCollectStandardTable_Row_) && (INCLUDE_ALL_ComGoogleCommonCollectStandardTable || defined(INCLUDE_ComGoogleCommonCollectStandardTable_Row))
#define ComGoogleCommonCollectStandardTable_Row_

#define RESTRICT_ComGoogleCommonCollectMaps 1
#define INCLUDE_ComGoogleCommonCollectMaps_IteratorBasedAbstractMap 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectStandardTable;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;

@interface ComGoogleCommonCollectStandardTable_Row : ComGoogleCommonCollectMaps_IteratorBasedAbstractMap {
 @public
  id rowKey_;
  id<JavaUtilMap> backingRowMap_;
}

#pragma mark Public

- (void)clear;

- (jboolean)containsKeyWithId:(id)key;

- (id)getWithId:(id)key;

- (id)putWithId:(id)key
         withId:(id)value;

- (id)removeWithId:(id)key;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable:(ComGoogleCommonCollectStandardTable *)outer$
                                                     withId:(id)rowKey;

- (id<JavaUtilMap>)backingRowMap;

- (id<JavaUtilMap>)computeBackingRowMap;

- (id<JavaUtilIterator>)entryIterator;

- (void)maintainEmptyInvariant;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_Row)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable_Row, rowKey_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectStandardTable_Row, backingRowMap_, id<JavaUtilMap>)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_Row_initWithComGoogleCommonCollectStandardTable_withId_(ComGoogleCommonCollectStandardTable_Row *self, ComGoogleCommonCollectStandardTable *outer$, id rowKey);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_Row *new_ComGoogleCommonCollectStandardTable_Row_initWithComGoogleCommonCollectStandardTable_withId_(ComGoogleCommonCollectStandardTable *outer$, id rowKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_Row *create_ComGoogleCommonCollectStandardTable_Row_initWithComGoogleCommonCollectStandardTable_withId_(ComGoogleCommonCollectStandardTable *outer$, id rowKey);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_Row)

#endif

#if !defined (ComGoogleCommonCollectStandardTable_RowMap_) && (INCLUDE_ALL_ComGoogleCommonCollectStandardTable || defined(INCLUDE_ComGoogleCommonCollectStandardTable_RowMap))
#define ComGoogleCommonCollectStandardTable_RowMap_

#define RESTRICT_ComGoogleCommonCollectMaps 1
#define INCLUDE_ComGoogleCommonCollectMaps_ViewCachingAbstractMap 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectStandardTable;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectStandardTable_RowMap : ComGoogleCommonCollectMaps_ViewCachingAbstractMap

#pragma mark Public

- (id<JavaUtilMap>)computeIfAbsentWithId:(id)arg0
            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilMap>)computeIfPresentWithId:(id)arg0
           withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilMap>)computeWithId:(id)arg0
  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (jboolean)containsKeyWithId:(id)key;

- (id<JavaUtilMap>)getWithId:(id)key;

- (id<JavaUtilMap>)getOrDefaultWithId:(id)arg0
                               withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)mergeWithId:(id)arg0
                        withId:(id<JavaUtilMap>)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilMap>)putIfAbsentWithId:(id)arg0
                              withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)putWithId:(id)arg0
                      withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)removeWithId:(id)key;

- (id<JavaUtilMap>)replaceWithId:(id)arg0
                          withId:(id<JavaUtilMap>)arg1;

#pragma mark Protected

- (id<JavaUtilSet>)createEntrySet;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable:(ComGoogleCommonCollectStandardTable *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_RowMap)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_RowMap_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable_RowMap *self, ComGoogleCommonCollectStandardTable *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap *new_ComGoogleCommonCollectStandardTable_RowMap_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap *create_ComGoogleCommonCollectStandardTable_RowMap_initWithComGoogleCommonCollectStandardTable_(ComGoogleCommonCollectStandardTable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_RowMap)

#endif

#if !defined (ComGoogleCommonCollectStandardTable_RowMap_EntrySet_) && (INCLUDE_ALL_ComGoogleCommonCollectStandardTable || defined(INCLUDE_ComGoogleCommonCollectStandardTable_RowMap_EntrySet))
#define ComGoogleCommonCollectStandardTable_RowMap_EntrySet_

@class ComGoogleCommonCollectStandardTable_RowMap;
@protocol JavaUtilIterator;

@interface ComGoogleCommonCollectStandardTable_RowMap_EntrySet : ComGoogleCommonCollectStandardTable_TableSet

#pragma mark Public

- (jboolean)containsWithId:(id)obj;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)obj;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectStandardTable_RowMap:(ComGoogleCommonCollectStandardTable_RowMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectStandardTable_RowMap_EntrySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectStandardTable_RowMap_EntrySet_initWithComGoogleCommonCollectStandardTable_RowMap_(ComGoogleCommonCollectStandardTable_RowMap_EntrySet *self, ComGoogleCommonCollectStandardTable_RowMap *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap_EntrySet *new_ComGoogleCommonCollectStandardTable_RowMap_EntrySet_initWithComGoogleCommonCollectStandardTable_RowMap_(ComGoogleCommonCollectStandardTable_RowMap *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectStandardTable_RowMap_EntrySet *create_ComGoogleCommonCollectStandardTable_RowMap_EntrySet_initWithComGoogleCommonCollectStandardTable_RowMap_(ComGoogleCommonCollectStandardTable_RowMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectStandardTable_RowMap_EntrySet)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectStandardTable")
