//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/cache/Striped64.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheStriped64")
#ifdef RESTRICT_ComGoogleCommonCacheStriped64
#define INCLUDE_ALL_ComGoogleCommonCacheStriped64 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheStriped64 1
#endif
#undef RESTRICT_ComGoogleCommonCacheStriped64

#if !defined (ComGoogleCommonCacheStriped64_) && (INCLUDE_ALL_ComGoogleCommonCacheStriped64 || defined(INCLUDE_ComGoogleCommonCacheStriped64))
#define ComGoogleCommonCacheStriped64_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangThreadLocal;
@class JavaUtilRandom;

@interface ComGoogleCommonCacheStriped64 : NSNumber {
 @public
  volatile_id cells_;
  volatile_jlong base_;
  volatile_jint busy_;
}

#pragma mark Package-Private

- (instancetype)init;

- (jboolean)casBaseWithLong:(jlong)cmp
                   withLong:(jlong)val;

- (jboolean)casBusy;

- (jlong)fnWithLong:(jlong)currentValue
           withLong:(jlong)newValue;

- (void)internalResetWithLong:(jlong)initialValue;

- (void)retryUpdateWithLong:(jlong)x
               withIntArray:(IOSIntArray *)hc
                withBoolean:(jboolean)wasUncontended;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCacheStriped64)

J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonCacheStriped64, cells_, IOSObjectArray *)

inline JavaLangThreadLocal *ComGoogleCommonCacheStriped64_get_threadHashCode();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangThreadLocal *ComGoogleCommonCacheStriped64_threadHashCode;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCacheStriped64, threadHashCode, JavaLangThreadLocal *)

inline JavaUtilRandom *ComGoogleCommonCacheStriped64_get_rng();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRandom *ComGoogleCommonCacheStriped64_rng;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCacheStriped64, rng, JavaUtilRandom *)

inline jint ComGoogleCommonCacheStriped64_get_NCPU();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ComGoogleCommonCacheStriped64_NCPU;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonCacheStriped64, NCPU, jint)

FOUNDATION_EXPORT void ComGoogleCommonCacheStriped64_init(ComGoogleCommonCacheStriped64 *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheStriped64)

#endif

#if !defined (ComGoogleCommonCacheStriped64_Cell_) && (INCLUDE_ALL_ComGoogleCommonCacheStriped64 || defined(INCLUDE_ComGoogleCommonCacheStriped64_Cell))
#define ComGoogleCommonCacheStriped64_Cell_

@interface ComGoogleCommonCacheStriped64_Cell : NSObject {
 @public
  volatile_jlong p0_, p1_, p2_, p3_, p4_, p5_, p6_;
  volatile_jlong value_;
  volatile_jlong q0_, q1_, q2_, q3_, q4_, q5_, q6_;
}

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)x;

- (jboolean)casWithLong:(jlong)cmp
               withLong:(jlong)val;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCacheStriped64_Cell)

FOUNDATION_EXPORT void ComGoogleCommonCacheStriped64_Cell_initWithLong_(ComGoogleCommonCacheStriped64_Cell *self, jlong x);

FOUNDATION_EXPORT ComGoogleCommonCacheStriped64_Cell *new_ComGoogleCommonCacheStriped64_Cell_initWithLong_(jlong x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCacheStriped64_Cell *create_ComGoogleCommonCacheStriped64_Cell_initWithLong_(jlong x);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheStriped64_Cell)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheStriped64")
