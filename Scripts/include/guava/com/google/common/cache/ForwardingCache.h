//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:../java_deps/build_result/guava-19.0-sources.jar!com/google/common/cache/ForwardingCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingCache")
#ifdef RESTRICT_ComGoogleCommonCacheForwardingCache
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingCache 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingCache 1
#endif
#undef RESTRICT_ComGoogleCommonCacheForwardingCache
#ifdef INCLUDE_ComGoogleCommonCacheForwardingCache_SimpleForwardingCache
#define INCLUDE_ComGoogleCommonCacheForwardingCache 1
#endif

#if !defined (ComGoogleCommonCacheForwardingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingCache))
#define ComGoogleCommonCacheForwardingCache_

#define RESTRICT_ComGoogleCommonCollectForwardingObject 1
#define INCLUDE_ComGoogleCommonCollectForwardingObject 1
#include "com/google/common/collect/ForwardingObject.h"

#define RESTRICT_ComGoogleCommonCacheCache 1
#define INCLUDE_ComGoogleCommonCacheCache 1
#include "com/google/common/cache/Cache.h"

@class ComGoogleCommonCacheCacheStats;
@class ComGoogleCommonCollectImmutableMap;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentConcurrentMap;
@protocol JavaUtilMap;

@interface ComGoogleCommonCacheForwardingCache : ComGoogleCommonCollectForwardingObject < ComGoogleCommonCacheCache >

#pragma mark Public

- (id<JavaUtilConcurrentConcurrentMap>)asMap;

- (void)cleanUp;

- (id)getWithId:(id)key
withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)valueLoader;

- (ComGoogleCommonCollectImmutableMap *)getAllPresentWithJavaLangIterable:(id<JavaLangIterable>)keys;

- (id)getIfPresentWithId:(id)key;

- (void)invalidateWithId:(id)key;

- (void)invalidateAll;

- (void)invalidateAllWithJavaLangIterable:(id<JavaLangIterable>)keys;

- (void)putWithId:(id)key
           withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)m;

- (jlong)size;

- (ComGoogleCommonCacheCacheStats *)stats;

#pragma mark Protected

- (instancetype)init;

- (id<ComGoogleCommonCacheCache>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingCache_init(ComGoogleCommonCacheForwardingCache *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingCache)

#endif

#if !defined (ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingCache_SimpleForwardingCache))
#define ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_

@protocol ComGoogleCommonCacheCache;

@interface ComGoogleCommonCacheForwardingCache_SimpleForwardingCache : ComGoogleCommonCacheForwardingCache

#pragma mark Protected

- (instancetype)initWithComGoogleCommonCacheCache:(id<ComGoogleCommonCacheCache>)delegate;

- (id<ComGoogleCommonCacheCache>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_initWithComGoogleCommonCacheCache_(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache *self, id<ComGoogleCommonCacheCache> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingCache")
